{"version":3,"sources":["App.tsx","api/api.ts","index.tsx"],"names":["App","useState","messages","setMessages","userName","setUserName","userText","setUserText","newMess","setNewMess","clearFields","submitForm","e","a","preventDefault","trim","length","alert","fetch","method","mode","headers","body","JSON","stringify","name","text","getMessages","URL","then","data","json","useEffect","reverseMessages","useMemo","reverse","className","onSubmit","type","value","onChange","target","map","item","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAoGeA,G,MAhGH,WAAO,IAAD,EACgBC,mBAAoB,IADpC,mBACTC,EADS,KACCC,EADD,OAEgBF,mBAAiB,IAFjC,mBAETG,EAFS,KAECC,EAFD,OAGgBJ,mBAAiB,IAHjC,mBAGTK,EAHS,KAGCC,EAHD,OAIcN,oBAAkB,GAJhC,mBAITO,EAJS,KAIAC,EAJA,KAMVC,EAAc,WAClBL,EAAY,IACZE,EAAY,KAGRI,EAAU,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACjBD,EAAEE,iBAEGV,EAASW,OAAOC,QAAWV,EAASS,OAAOC,OAH/B,uBAIfC,MAAM,mHACNP,IALe,0CASXQ,MAAM,4DAA6D,CACvEC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,KAAMrB,EAAUsB,KAAMpB,MAf9B,OAkBjBI,IACAD,GAAYD,GAnBK,2CAAH,sDAsBVmB,EAAc,WClCbT,MAAMU,6DACVC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UDmChBF,MAAK,SAAAC,GAAI,OAAI3B,EAAY2B,OAG9BE,qBAAU,WACRL,MACC,CAACnB,IAEJ,IAAMyB,EAAkBC,mBAAQ,WAC9B,OAAO,YAAIhC,GAAUiC,YACpB,CAACjC,IAEJ,OACE,yBAAKkC,UAAU,WACb,4BAAQA,UAAU,UAChB,wBAAIA,UAAU,iBAAd,qBAGA,0BACEC,SAAU1B,EACVyB,UAAU,eAEV,2BAAOA,UAAU,sBACd,SACD,2BACEE,KAAK,OACLC,MAAOnC,EACPoC,SAAU,SAAC5B,GAAD,OAAOP,EAAYO,EAAE6B,OAAOF,QACtCH,UAAU,uBAGd,2BAAOA,UAAU,sBACd,YACD,2BACEE,KAAK,OACLC,MAAOjC,EACPkC,SAAU,SAAC5B,GAAD,OAAOL,EAAYK,EAAE6B,OAAOF,QACtCH,UAAU,uBAGd,2BACEE,KAAK,SACLC,MAAM,OACNH,UAAU,0BAIhB,0BAAMA,UAAU,UAEVlC,EAASc,QACRiB,EAAgBS,KAAI,SAACC,GAAD,OACrB,6BAASC,IAAKD,EAAKjB,KAAMU,UAAU,WACjC,4BAAKO,EAAKlB,MACV,2BAAIkB,EAAKjB,cEtFvBmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.dcefcecc.chunk.js","sourcesContent":["import React, { useState, useMemo, useEffect } from 'react';\nimport { getMessagesFromData } from './api/api';\nimport './App.scss';\n\nconst App = () => {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [userName, setUserName] = useState<string>('');\n  const [userText, setUserText] = useState<string>('');\n  const [newMess, setNewMess] = useState<boolean>(true)\n\n  const clearFields = () => {\n    setUserName('');\n    setUserText('');\n  }\n\n  const submitForm = async (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n\n    if (!userName.trim().length || !userText.trim().length) {\n      alert('Не все поля заполнены')\n      clearFields()\n      return;\n    }\n\n    await fetch('https://test-api-yevhenbychkov.herokuapp.com/api/messages', {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name: userName, text: userText }),\n    })\n\n    clearFields()\n    setNewMess(!newMess)\n  }\n\n  const getMessages = () => {\n    getMessagesFromData()\n      .then(data => setMessages(data))\n  }\n\n  useEffect(() => {\n    getMessages();\n  }, [newMess])\n\n  const reverseMessages = useMemo(() => {\n    return [...messages].reverse();\n  }, [messages])\n\n  return (\n    <div className=\"wrapper\">\n      <header className=\"header\">\n        <h1 className=\"header__title\">\n          Send your message\n        </h1>\n        <form\n          onSubmit={submitForm}\n          className=\"header-form\"\n        >\n          <label className=\"header-form__label\">\n            {'Name: '}\n            <input\n              type=\"text\"\n              value={userName}\n              onChange={(e) => setUserName(e.target.value)}\n              className=\"header-form__name\"\n            />\n          </label>\n          <label className=\"header-form__label\">\n            {'Message: '}\n            <input\n              type=\"text\"\n              value={userText}\n              onChange={(e) => setUserText(e.target.value)}\n              className=\"header-form__text\"\n            />\n          </label>\n          <input\n            type=\"submit\"\n            value=\"send\"\n            className=\"header-form__submit\"\n          />\n        </form>\n      </header>\n      <main className=\"main\">\n        {\n          !!messages.length\n          && reverseMessages.map((item: Message) => (\n            <article key={item.text} className=\"message\">\n              <h2>{item.name}</h2>\n              <p>{item.text}</p>\n            </article>\n          ))\n        }\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const URL = 'https://test-api-yevhenbychkov.herokuapp.com';\r\n\r\nexport const getMessagesFromData = () => {\r\n  return fetch(URL + '/api/messages')\r\n    .then(data => data.json());\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}